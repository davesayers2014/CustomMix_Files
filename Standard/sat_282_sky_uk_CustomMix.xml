<!-- DSayers Sky UK Custom mix xml file-->
<!-- DATE 20230620 -->
<custommix>
	<inserts>
	</inserts>
	<streams>
	</streams>
	<deletes>
		<!-- Delete  Channels -->
		<delete target="302"></delete> <!-- CultClassicsHD -->
		<delete target="303"></delete> <!-- Sky Hits HD -->
		<delete target="305"></delete> <!-- SkyAnimationHD -->
		<delete target="308"></delete> <!-- Sky Comedy Cinema HD -->
		<delete target="309"></delete> <!-- Sky Thriller HD -->
		<delete target="310"></delete> <!-- Sky Drama HD -->
		<delete target="311"></delete> <!-- Sky ScFi/HorHD -->
		<delete target="412"></delete> <!-- Viaplay 1 HD -->
		<delete target="421"></delete> <!-- Viaplay 2 HD -->
		<delete target="425"></delete> <!-- LFCTV HD -->
		<delete target="490"></delete> <!-- BTSptBoxOffHD -->
		<delete target="493"></delete> <!-- BTSUltimateUHD -->
		<delete target="494"></delete> <!-- BTSBoxOff2HD -->
		<delete target="521"></delete> <!-- NBC News NOW HD -->
		<delete target="609"></delete> <!-- Sky Kids HD -->
		<delete target="640"></delete> <!-- Cartoon Net HD -->
		<delete target="641"></delete> <!-- Boomerang HD -->
		<delete target="642"></delete> <!-- Nickelodeon HD -->
		<delete target="806"></delete> <!-- SkyShowcaseHD -->
		<delete target="807"></delete> <!-- Sky Witness HD -->
		<delete target="808"></delete> <!-- Sky Atlantic HD -->
		<delete target="809"></delete> <!-- alibi HD -->
		<delete target="810"></delete> <!-- GOLD HD -->
		<delete target="811"></delete> <!-- Dave HD -->
		<delete target="813"></delete> <!-- Sky Max HD -->
		<delete target="814"></delete> <!-- Sky Comedy HD -->
		<delete target="819"></delete> <!-- SkyDocmntrsHD -->
		<delete target="820"></delete> <!-- Sky Crime HD -->
		<delete target="821"></delete> <!-- Sky HistoryHD -->
		<delete target="822"></delete> <!-- Sky Nature HD -->
		<delete target="823"></delete> <!-- Discovery HD -->
		<delete target="825"></delete> <!-- Nat Geo HD -->
		<delete target="826"></delete> <!-- Sky Arts HD -->
		<delete target="827"></delete> <!-- W HD -->
		<delete target="830"></delete> <!-- E4 HD -->
		<delete target="831"></delete> <!-- More4 HD -->
		<delete target="835"></delete> <!-- E! HD -->
		<delete target="836"></delete> <!-- Sky Sci-Fi HD -->
		<delete target="837"></delete> <!-- Crime+Inv HD -->
		<delete target="840"></delete> <!-- SkyHistory2HD -->
		<delete target="841"></delete> <!-- NatGeoWild HD -->
		<delete target="846"></delete> <!-- YESTERDAY HD -->
		<delete target="848"></delete> <!-- SkyPremiereHD -->
		<delete target="849"></delete> <!-- SkyOscarsHD -->
		<delete target="850"></delete> <!-- SkyKidsBooksHD -->
		<delete target="851"></delete> <!-- Sky Action HD -->
		<delete target="855"></delete> <!-- Film4 HD -->
		<delete target="857"></delete> <!-- SkySpF1 UHD -->
		<delete target="858"></delete> <!-- SkySpME UHD -->
		<delete target="859"></delete> <!-- SkySpMainEvHD -->
		<delete target="860"></delete> <!-- SkySp PL HD -->
		<delete target="861"></delete> <!-- SkySp F'ball HD -->
		<delete target="862"></delete> <!-- SkySpCricket HD -->
		<delete target="863"></delete> <!-- SkySp Golf HD -->
		<delete target="864"></delete> <!-- SkySp F1 HD -->
		<delete target="865"></delete> <!-- SkySp ActionHD -->
		<delete target="866"></delete> <!-- SkySp ArenaHD -->
		<delete target="867"></delete> <!-- SkySp News HD -->
		<delete target="868"></delete> <!-- Eurosport 1 HD -->
		<delete target="869"></delete> <!-- Eurosport 2 HD -->
		<delete target="870"></delete> <!-- BT Sport 1 HD -->
		<delete target="871"></delete> <!-- BT Sport 2 HD -->
		<delete target="872"></delete> <!-- SkySp Racing HD -->
		<delete target="873"></delete> <!-- SkySp Mix HD -->
		<delete target="874"></delete> <!-- BT Sport 3 HD -->
		<delete target="875"></delete> <!-- MUTV HD -->
		<delete target="876"></delete> <!-- BT Sport 4 HD -->
		<delete target="877"></delete> <!-- Racing TV HD -->
		<delete target="881"></delete> <!-- Sky News HD -->
		<delete target="892"></delete> <!-- SONY TV HD -->
		<delete target="893"></delete> <!-- Utsav Plus HD -->
		<delete target="895"></delete> <!-- SONY MAX HD -->
		<delete target="896"></delete> <!-- Utsav Gold HD -->
	</deletes>
	<hacks>
<![CDATA[

channels_to_add_by_id = {
		3705: 112, # ComedyCentral
		2709: 127, # ComedyXtra
		2418: 154, # ID
		1409: 301, #
		1815: 304, #
		1808: 306, #
		1001: 307, #
		1341: 401, #
		1326: 402, #
		3848: 403, #
		1302: 404, #
		1324: 405, #
		1306: 406, #
		1285: 407, #
		1333: 408, #
		3839: 412, #
		4091: 416, #
		2517: 604, # Nicelodeon
		5527: 606, # Nicktoons
		3356: 615, # Nick Jr
		3077: 809, # Alibi HD
		3078: 811, # Dave HD
		3080: 827, # W HD
}

# Add channels by ID
for service in sorted(customised["video"].keys()):
	if "channel_id" in customised["video"][service] and customised["video"][service]["channel_id"] in channels_to_add_by_id:
		customised["video"][channels_to_add_by_id[customised["video"][service]["channel_id"]]] = customised["video"][service]
		del customised["video"][service]

# Add ITV regions Bouquet
ITVs = []
ITVsPlusOne = []
rest = []
last_section = max(sections.keys())
last_section_name = sections[last_section]

for service in sorted(services["sat_282_sky_uk"]["video"].keys()):
	if service in range(last_section, 1450) or service in [103, 133, 178]:
		# ITV regions
		if 'interactive_name' in services["sat_282_sky_uk"]["video"][service] and (service in [103,178] or (service in range(last_section, 1450) and '+1' not in services["sat_282_sky_uk"]["video"][service]["interactive_name"] and ('ITV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'STV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'UTV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"]))):
			ITVs.append(services["sat_282_sky_uk"]["video"][service])

		# ITV +1 regions
		elif 'interactive_name' in services["sat_282_sky_uk"]["video"][service] and (service in [133] or (service in range(last_section, 1450) and '+1' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] and ('ITV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'STV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'UTV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"]))):
			ITVsPlusOne.append(services["sat_282_sky_uk"]["video"][service])

		else:
			rest.append(services["sat_282_sky_uk"]["video"][service])

i = last_section
sections[i] = "ITV Regions"

sort_list = []
for x in ITVs:
	sort_list.append((x, re.sub('^(?![a-z])', 'zzzzz', x['interactive_name'].lower())))
sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
for service in sort_list:
	customised["video"][i] = service[0]
	i += 1

sort_list = []
for x in ITVsPlusOne:
	sort_list.append((x, re.sub('^(?![a-z])', 'zzzzz', x['interactive_name'].lower())))
sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
for service in sort_list:
	customised["video"][i] = service[0]
	i += 1

sections[i] = last_section_name
sort_list = []
for x in rest:
	sort_list.append((x, re.sub('^(?![a-z])', 'zzzzz', x['service_name'].lower())))
sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
for service in sort_list:
	customised["video"][i] = service[0]
	i += 1

# TSIDs that contain services that need stream relay (or this could be done by LCN or CHID).
TSIDs = [0x7D3, 0x7D7, 0x7D8, 0x7DB, 0x7DC, 0x7E0, 0x7E3, 0x7E4, 0x7E5, 0x7E7, 0x7E8, 0x7E9, 0x7EA, 0x7EB, 0x7EC, 0x7ED, 0x7EE, 0x7F0, 0x7F2, 0x838, 0x841, 0x842]

for service in sorted(list(services[section_identifier]["video"].keys())):
		serv = services[section_identifier]["video"][service]
		if serv["transport_stream_id"] in TSIDs and "free_ca" in serv and serv["free_ca"] == 1: # only on listed transponders and only encrypted services
			url = "http://127.0.0.1:17999/1:0:1:%x:%x:%x:%x:0:0:0:" % (
				serv["service_id"],
				serv["transport_stream_id"],
				serv["original_network_id"],
				serv["namespace"],
			)
			serv["stream"] = quote(url)
			serv["namespace"] = 33 # writing a dummy namespace is a requirement of stream relay

# Create csv file in /tmp directory
def sortDictFlatAlpha(services):
	# services is a dict with LCNs as keys
	# returns keys, sorted flat alphabetic by service name (or interactive name if it is set).
	import re
	sort_list = []
	for lcn in services:
		if "interactive_name" in services[lcn]:
			sort_list.append((lcn, re.sub('^(?![a-z])', 'zzzzz', services[lcn]['interactive_name'].lower())))
		else:
			sort_list.append((lcn, re.sub('^(?![a-z])', 'zzzzz', services[lcn]['service_name'].lower())))
	sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
	return [i[0] for i in sort_list]
def today():
	import datetime
	return datetime.date.today().strftime('%Y%m%d%H%M%S')
def rightNow():
	import datetime
	return datetime.datetime.now().strftime('%Y%m%d%H%M%S')
csv = ["Name,Service ref,DVB Name,LCN,CHID,CA,Provider,SID,TSID,Service type,IPTV_link,Ocram_SRP\r\n"]
control_chars = ''.join(list(map(six.unichr, list(range(0, 32)) + list(range(127, 160)))))
control_char_re = re.compile('[%s]' % re.escape(control_chars))
for number in sortDictFlatAlpha(customised["video"]):
	interactive_name = customised["video"][number]["service_name"]
	if 'interactive_name' in customised["video"][number]:
		interactive_name = customised["video"][number]["interactive_name"]
	if six.PY2:
		interactive_name = control_char_re.sub('', interactive_name).decode('latin-1').encode("utf8")
#	else:
#		interactive_name = control_char_re.sub('', interactive_name).encode("utf8")
	channel_id = ""
	if 'channel_id' in customised["video"][number]:
		channel_id = str(customised["video"][number]["channel_id"])
	csv.append('%s,1:0:%s:%s:%s:%s:%s:0:0:0:,%s,%d,%s,%d,%s,0x%x,0x%x,%d,#SERVICE 4097:0:%x:%x:%x:%x:%x:0:0:0:,%s_%s_%s_%s\r\n' % (
					interactive_name,
#Service ref
					str("%x"%customised["video"][number]["service_type"]).upper(),
					str("%x"%customised["video"][number]["service_id"]).upper(),
					str("%x"%customised["video"][number]["transport_stream_id"]).upper(),
					str("%x"%customised["video"][number]["original_network_id"]).upper(),
					str("%x"%customised["video"][number]["namespace"]).upper(),
#DVB Name
					customised["video"][number]["service_name"],
					number,
					channel_id,
					customised["video"][number]["free_ca"],
					customised["video"][number]["provider_name"],
					customised["video"][number]["service_id"],
					customised["video"][number]["transport_stream_id"],
					customised["video"][number]["service_type"],
#IPTV_link
					customised["video"][number]["service_type"],
					customised["video"][number]["service_id"],
					customised["video"][number]["transport_stream_id"],
					customised["video"][number]["original_network_id"],
					customised["video"][number]["namespace"],
#OCRAM_SRP
					str("%x"%customised["video"][number]["service_id"]).upper(),
					str("%x"%customised["video"][number]["transport_stream_id"]).upper(),
					str("%x"%customised["video"][number]["original_network_id"]).upper(),
					str("%x"%customised["video"][number]["namespace"]).upper()
				))
with open("/tmp/0282_sky_GBR-" + rightNow() + ".csv", "w") as csv_file:
	csv_file.write(''.join(csv))

]]>
    </hacks>
	<instructions>
<![CDATA[
]]>
	</instructions>
</custommix>
