<!-- DSayers Sky UK Custom mix xml file-->
<!-- DATE 20210314 -->
<custommix>
	<inserts>
	</inserts>
	<streams>
	</streams>
	<deletes>
		<!-- Delete none working channels -->
    <delete target="312"></delete> <!-- Sky Premier+1 -->
	</deletes>
	<hacks>
<![CDATA[

channels_to_add_by_id = {
	1701: 855, # Sky Sports Main Event HD
        4035: 409, # Sky Sports News HD
}

# Add channels by ID
for service in sorted(customised["video"].keys()):
	if "channel_id" in customised["video"][service] and customised["video"][service]["channel_id"] in channels_to_add_by_id:
		customised["video"][channels_to_add_by_id[customised["video"][service]["channel_id"]]] = customised["video"][service]
		del customised["video"][service]

# Add ITV regions Bouquet
ITVs = []
ITVsPlusOne = []
rest = []
last_section = max(sections.keys())
last_section_name = sections[last_section]

for service in sorted(services["sat_282_sky_uk"]["video"].keys()):
	if service in range(last_section, 1450) or service in [103, 133, 178]:
		# ITV regions
		if 'interactive_name' in services["sat_282_sky_uk"]["video"][service] and (service in [103,178] or (service in range(last_section, 1450) and '+1' not in services["sat_282_sky_uk"]["video"][service]["interactive_name"] and ('ITV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'STV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'UTV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"]))):
			ITVs.append(services["sat_282_sky_uk"]["video"][service])

		# ITV +1 regions
		elif 'interactive_name' in services["sat_282_sky_uk"]["video"][service] and (service in [133] or (service in range(last_section, 1450) and '+1' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] and ('ITV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'STV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"] or 'UTV' in services["sat_282_sky_uk"]["video"][service]["interactive_name"]))):
			ITVsPlusOne.append(services["sat_282_sky_uk"]["video"][service])

		else:
			rest.append(services["sat_282_sky_uk"]["video"][service])

i = last_section
sections[i] = "ITV Regions"

sort_list = []
for x in ITVs:
	sort_list.append((x, re.sub('^(?![a-z])', 'zzzzz', x['interactive_name'].lower())))
sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
for service in sort_list:
	customised["video"][i] = service[0]
	i += 1

sort_list = []
for x in ITVsPlusOne:
	sort_list.append((x, re.sub('^(?![a-z])', 'zzzzz', x['interactive_name'].lower())))
sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
for service in sort_list:
	customised["video"][i] = service[0]
	i += 1

sections[i] = last_section_name
sort_list = []
for x in rest:
	sort_list.append((x, re.sub('^(?![a-z])', 'zzzzz', x['service_name'].lower())))
sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
for service in sort_list:
	customised["video"][i] = service[0]
	i += 1

# Create csv file in /tmp directory
def sortDictFlatAlpha(services):
	# services is a dict with LCNs as keys
	# returns keys, sorted flat alphabetic by service name (or interactive name if it is set).
	import re
	sort_list = []
	for lcn in services:
		if "interactive_name" in services[lcn]:
			sort_list.append((lcn, re.sub('^(?![a-z])', 'zzzzz', services[lcn]['interactive_name'].lower())))
		else:
			sort_list.append((lcn, re.sub('^(?![a-z])', 'zzzzz', services[lcn]['service_name'].lower())))
	sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
	return [i[0] for i in sort_list]

def today():
	import datetime
	return datetime.date.today().strftime('%Y%m%d%H%M%S')

def rightNow():
	import datetime
	return datetime.datetime.now().strftime('%Y%m%d%H%M%S')

csv = ["Name,Service ref,DVB Name,LCN,CHID,CA,Provider,SID,TSID,Service type,IPTV_link,Ocram_SRP\r\n"]

control_chars = ''.join(map(unichr, range(0,32) + range(127,160)))
control_char_re = re.compile('[%s]' % re.escape(control_chars))

for number in sortDictFlatAlpha(customised["video"]):
	interactive_name = customised["video"][number]["service_name"]
	if 'interactive_name' in customised["video"][number]:
		interactive_name = customised["video"][number]["interactive_name"]
	interactive_name = control_char_re.sub('', interactive_name).decode('latin-1').encode("utf8")
	channel_id = ""
	if 'channel_id' in customised["video"][number]:
		channel_id = str(customised["video"][number]["channel_id"])
	csv.append('%s,1:0:%s:%s:%s:%s:%s:0:0:0:,%s,%d,%s,%d,%s,0x%x,0x%x,%d,#SERVICE 4097:0:%x:%x:%x:%x:%x:0:0:0:,%s_%s_%s_%s\r\n' % (
					interactive_name,
#Service ref
					str("%x"%customised["video"][number]["service_type"]).upper(),
					str("%x"%customised["video"][number]["service_id"]).upper(),
					str("%x"%customised["video"][number]["transport_stream_id"]).upper(),
					str("%x"%customised["video"][number]["original_network_id"]).upper(),
					str("%x"%customised["video"][number]["namespace"]).upper(),
#DVB Name
					customised["video"][number]["service_name"],
					number,
					channel_id,
					customised["video"][number]["free_ca"],
					customised["video"][number]["provider_name"],
					customised["video"][number]["service_id"],
					customised["video"][number]["transport_stream_id"],
					customised["video"][number]["service_type"],
#IPTV_link
					customised["video"][number]["service_type"],
					customised["video"][number]["service_id"],
					customised["video"][number]["transport_stream_id"],
					customised["video"][number]["original_network_id"],
					customised["video"][number]["namespace"],
#OCRAM_SRP
					str("%x"%customised["video"][number]["service_id"]).upper(),
					str("%x"%customised["video"][number]["transport_stream_id"]).upper(),
					str("%x"%customised["video"][number]["original_network_id"]).upper(),
					str("%x"%customised["video"][number]["namespace"]).upper()
				))
with open("/tmp/0282_sky_GBR-" + rightNow() + ".csv", "w") as csv_file:
	csv_file.write(''.join(csv))

]]>
    </hacks>
	<instructions>
<![CDATA[
]]>
	</instructions>
</custommix>
